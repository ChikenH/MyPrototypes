<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAQEAAAAEACAAoFgAAFgAAACgAAABAAAAAgAAAAAEACAAAAAAAABAAAAAAAAAAAAAAAAEAAAAB
        AAAAAAAAGxsbAAcHBwAePNIACg0FAChDyQAbNrwABAQEAAICAgBBfAEAAgICACUz2AAEBAoAAgICAAMD
        CgAnN+IAQHUAAAsSPwAQFmAAIy/DAEV6AAA7aAwAJTLUABkklAAmNdwAHSmqACc55gAgLLkAJjbhACMx
        ywBEegAAJTTaACU02AAnOOYARHsAAD5tGAAnNuEAKDfnACg35QApO8MAQ3gKACg45wAnNuIAJjXaACQz
        0QAiMMgAM1RtACAuvgAgLbYAJTebADZcSgAhMKYAQHIYACg/hAA7Zy4ARXwAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEBAgICAgICAgIBAQEBAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQIEBAQHBwgICAoICAgIBwcEBAQC
        AgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQIEBAcICgwMDQ0NDg4ODg4ODQ0N
        DAwKCAcEBAIBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAECBAQICgwNDg4OERcXGRsbGxsb
        GxkZEhEODg4NDAoIBwICAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQIEBwoMDQ4RFx0gJikpKSkp
        KSkpKSkpKSkpJiAdFxEODgwKBwQCAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAgQIDA0OEhsgKSkpKSkp
        KSkpKSkpKSkpKSkpKSkpKSkpIBsRDg0KCAQCAQAAAAAAAAAAAAAAAAAAAAAAAAECBAcMDQ4ZICkpKSkp
        KSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSAXDg0MBwQBAQAAAAAAAAAAAAAAAAAAAAACBwoNDhkkKSkp
        KSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSYbEQ0KBwIBAAAAAAAAAAAAAAAAAAEEBwwOGSQp
        KSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSQXDgwHAgEAAAAAAAAAAAAAAAEECA0S
        HykpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSASDQgEAQAAAAAAAAAAAAEE
        Cg0ZJikpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpJhkNCgQBAAAAAAAA
        AAEECg0bKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpHQ0KBAEA
        AAAAAAEECA0dKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkd
        DQgEAQAAAAACCA0dKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkp
        KSkpKR0NCAIAAAABBAwdKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkp
        KSkpKSkpKSkpGwwHAQABBAoZKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkp
        KSkpKSkpKSkpKSkpKSkZCgQAAgcRJikpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkp
        KSkpKSkpKSkpKSkpKSkpKSkpJREHAQQKICkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkp
        KSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkdCgIHEykpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkp
        KSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKhMEByApKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkp
        KSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkfBwwpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkp
        KSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKQ4YKSkpKSkpKSkpKSkpKSkpKSkpKSkp
        KSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkWHSkpKSkpKSkpKSkpKSkpKSkp
        KSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpHyQpKSkpKSkpKSkpKSkp
        KSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSAmKSkpKSkpKSkp
        KSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkmKSkpKSkp
        KSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkp
        KSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkp
        KSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkp
        KSkpKSkpJSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkp
        KSkpKSkpKSkpJSEpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkp
        KSkpKSkpKSkpKSkpKSEgKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkp
        KSkpKSkpKSkpKSkpKSkpKSkhHykpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkp
        KSkpKSkpKSkpKSkpKSkpKSkpKSkpHxwpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkp
        KSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKRwYKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkp
        KSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkWEykpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkp
        KSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpEwspKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkp
        KSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKQsBISkpKSkpKSkpKSkpKSkpKSkpKSkp
        KSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSEBARwpKSkpKSkpKSkpKSkpKSkp
        KSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkcAAATKSkpKSkpKSkpKSkp
        KSkpKSkpKSkqKSkpKSkpKSkpKSkpKSkpKSkpKiopKSkpKSkpKSkpKSkpKSkpKSkpDwAAASEpKSkpKSkp
        KSkpKSkpKSkpKSoqKysqKikpKSkpKSkpKSkpKSoqKysqKSkpKSkpKSkpKSkpKSkpKSkpJQUAAAAcKSkp
        KSkpKSkpKSkpKSkpKSkpKi0tLCsrKikpKSkpKSkpKiorLC0sKykpKSkpKSkpKSkpKSkpKSkpKRgAAAAA
        CykpKSkpKSkpKSkpKSkpKSkpKScxLy8vLSwrKikpKSkqKystLzAvMCcpKSkpKSkpKSkpKSkpKSkpKSUG
        AAAAAAAYKSkpKSkpKSkpKSkpKSkpKSknNDY1MDAvLSwrKiorLC0vMDAuNigrKSkpKSkpKSkpKSkpKSkp
        KSkYAAAAAAAAASEpKSkpKSkpKSkpKSkpKSkpKS43NygyMzAvLSwsLS8wMS40NzcuKSkpKSkpKSkpKSkp
        KSkpKSkhAwAAAAAAAAALJSkpKSkpKSkpKSkpKSkpKSknNzc3NygyMTAwMDAxMig3NzcoKykpKSkpKSkp
        KSkpKSkpKSklCwAAAAAAAAAAAA8lKSkpKSkpKSkpKSkpKSkpKTI3Nzc3Nzc2NTU2Nzc3Nzc3LikpKSkp
        KSkpKSkpKSkpKSkpDwAAAAAAAAAAAAABCyUpKSkpKSkpKSkpKSkpKSknNzc3Nzc3Nzc3Nzc3Nzc3KCwp
        KSkpKSkpKSkpKSkpKSkhCwAAAAAAAAAAAAAAAAALHykpKSkpKSkpKSkpKSorLDI3Nzc3Nzc3Nzc3Nzc3
        NzIsKyopKSkpKSkpKSkpKSkcCwAAAAAAAAAAAAAAAAAAAAAPHykpKSkpKSkqKissLS8xNzc3Nzc3Nzc3
        Nzc3NzcxLy0sKyopKSkpKSkpKSETAAAAAAAAAAAAAAAAAAAAAAAAAAAPGiUpKSoqKywtLzAxMjc3Nzc3
        Nzc3Nzc3Nzc3MjEwMC0sKyopKSkhHA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADxYcICcvMDEyNzc3
        Nzc3Nzc3Nzc3Nzc3Nzc3NjUwLycfHRYPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAECBwgKFSM3
        Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3IxUKCAQCAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAgIV
        Hjc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3HhACAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABQiNzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3HhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAJCQkJIjc3Nzc3NygJCQkEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABU3Nzc3NzcVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIjc3NzciBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQ3Nzc3EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIjc3HgEAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABA3NxAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHh4AAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkJAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////////////////////////+AAP//////8AAAD/////8AAAAB
        /////AAAAAA////wAAAAAA///8AAAAAAA///AAAAAAAA//8AAAAAAAB//AAAAAAAAD/4AAAAAAAAH/AA
        AAAAAAAP4AAAAAAAAAfAAAAAAAAAA8AAAAAAAAADgAAAAAAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAAAAAAAAGAAAAAAAAAAcAA
        AAAAAAADwAAAAAAAAAPgAAAAAAAAB+AAAAAAAAAH8AAAAAAAAA/4AAAAAAAAH/gAAAAAAAA//gAAAAAA
        AH//gAAAAAAB///gAAAAAAf///wAAAAAP////AAAAAA////8AAAAAH////4AAAAAf/////8AAP//////
        //AP////////8A/////////4H/////////gf/////////D/////////+f/////////5/////
</value>
  </data>
</root>